name: Tasmota CI (Kettle Companion)

on:
  push:
    branches:
      - kettlecompanion
      - kettlecompanion-prod
  pull_request:
    branches:
      - kettlecompanion
#  release:
#    types: published

jobs:
  tasmota:
    runs-on: ubuntu-latest
    env:
    steps:
    - name: Set envvars
      run: |
        echo '::set-output name=SHORT_SHA::$(git rev-parse --short HEAD)'
    - name: Checkout
      uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U platformio
        platformio upgrade --dev
        platformio update
    - name: Run PlatformIO
      run: platformio run -e tasmota
    - name: Store artifacts
      uses: actions/upload-artifact@v2
      with:
        name: firmware-${{ env.SHORT_SHA }}
        path: ./build_output/firmware
    - name: Deploy Development (if 'kettlecompanion' branch)
      if: ${{ github.ref == 'refs/heads/kettlecompanion' }}
      uses: JamesIves/github-pages-deploy-action@4.1.4
      with:
        branch: gh-pages # The branch the action should deploy to.
        folder: build_output/firmware  # The folder the action should deploy.
        target-folder: devel
        clean: true
        clean-exclude: |
          *.bin
          *.bin.gz
    - name: Deploy Production (if 'kettlecompanion-prod' branch)
      if: ${{ github.ref == 'refs/heads/kettlecompanion-deploy' }}
      uses: JamesIves/github-pages-deploy-action@4.1.4
      with:
        branch: gh-pages # The branch the action should deploy to.
        folder: build_output/firmware  # The folder the action should deploy.
        target-folder: prod
        clean: true
        clean-exclude: |
          *.bin
          *.bin.gz
